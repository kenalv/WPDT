services:
  # WordPress service
  wordpress:
    image: wordpress:latest
    container_name: wpdt-wordpress
    restart: unless-stopped
    ports:
      - "8090:80"  # Different port to avoid conflict with coffeeshop
    environment:
      # Azure MySQL Database Configuration
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
      
      # WordPress Configuration  
      WORDPRESS_CONFIG_EXTRA: define('MYSQL_SSL_CA', '/var/www/html/DigiCertGlobalRootCA.crt.pem'); define('MYSQL_CLIENT_FLAGS', MYSQLI_CLIENT_SSL); define('WP_DEBUG_LOG', true); define('WP_DEBUG_DISPLAY', false);
        
        /* Performance Configuration */
        define('WP_POST_REVISIONS', 3);
        define('AUTOSAVE_INTERVAL', 300);
        define('WP_CRON_LOCK_TIMEOUT', 60);
        
        /* File Upload Configuration */
        ini_set('upload_max_filesize', '128M');
        ini_set('post_max_size', '128M');
        ini_set('max_execution_time', 300);
        ini_set('memory_limit', '256M');
        
        /* Security */
        define('DISALLOW_FILE_EDIT', true);
        
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./DigiCertGlobalRootCA.crt.pem:/var/www/html/DigiCertGlobalRootCA.crt.pem:ro
      - ./performance-monitor.php:/var/www/html/wp-content/mu-plugins/performance-monitor.php:ro
    #depends_on: # Local MySQL service (for development - optional)
    #  - mysql
    networks:
      - wpdt-network

  # Local MySQL service (for development - optional)
  #mysql:
  #  image: mysql:8.0
  #  container_name: wpdt-mysql-local
  #  restart: unless-stopped
  #  environment:
  #    MYSQL_DATABASE: wpdt_local_db
  #    MYSQL_USER: wpdt
  #    MYSQL_PASSWORD: wpdt123
  #    MYSQL_ROOT_PASSWORD: root123
  #  volumes:
  #    - mysql_data:/var/lib/mysql
  #  ports:
  #    - "3307:3306"  # Different port to avoid conflict
  #  networks:
  #    - wpdt-network
  #  profiles:
  #    - local  # Only start with: docker-compose --profile local up

  # phpMyAdmin for local database management
  #phpmyadmin:
  #  image: phpmyadmin/phpmyadmin
  #  container_name: wpdt-phpmyadmin
  #  restart: unless-stopped
  #  ports:
  #    - "8091:80"
  #  environment:
  #    PMA_HOST: mysql
  #    PMA_USER: wpdt
  #    PMA_PASSWORD: wpdt123
  #  depends_on:
  #    - mysql
  #  networks:
  #    - wpdt-network
  #  profiles:
  #    - local

volumes:
  mysql_data:

networks:
  wpdt-network:
    driver: bridge
